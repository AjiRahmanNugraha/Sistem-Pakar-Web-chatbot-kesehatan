{"ast":null,"code":"var _jsxFileName = \"D:\\\\sispak\\\\Sistem Pakar\\\\mern-sistempakardokter\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [language, setLanguage] = useState('english');\n  const token = localStorage.getItem('token');\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: message\n    };\n    setConversation(prev => [...prev, userMessage]);\n    setMessage('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message,\n        language\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const botResponse = {\n        sender: 'bot',\n        text: res.data.response\n      };\n      setConversation(prev => [...prev, botResponse]);\n    } catch (error) {\n      const errorResponse = {\n        sender: 'bot',\n        text: 'Error processing your request.'\n      };\n      setConversation(prev => [...prev, errorResponse]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dashboard - Chat Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          children: \"Select Language: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"english\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"indonesian\",\n            children: \"Indonesian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          border: '1px solid #ccc',\n          overflowY: 'auto',\n          padding: 10,\n          marginBottom: 10,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n            margin: '10px 0',\n            maxWidth: '80%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              padding: '8px 12px',\n              borderRadius: 20,\n              backgroundColor: msg.sender === 'user' ? '#d1e7dd' : '#f8d7da',\n              wordWrap: 'break-word'\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        style: {\n          width: '100%',\n          padding: 10,\n          resize: 'none',\n          boxSizing: 'border-box'\n        },\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your symptoms here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        style: {\n          marginTop: 10,\n          alignSelf: 'flex-end'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UserDashboard, \"OMZbNth18nWzcDjIOdUtxypvo/4=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","_s","message","setMessage","conversation","setConversation","language","setLanguage","token","localStorage","getItem","handleSend","trim","userMessage","sender","text","prev","res","post","headers","Authorization","botResponse","data","response","error","errorResponse","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","display","flexDirection","height","marginBottom","htmlFor","id","value","onChange","e","target","flexGrow","border","overflowY","map","msg","index","alignSelf","borderRadius","backgroundColor","wordWrap","rows","width","resize","boxSizing","placeholder","onClick","marginTop","_c","$RefreshReg$"],"sources":["D:/sispak/Sistem Pakar/mern-sistempakardokter/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction UserDashboard() {\r\n  const [message, setMessage] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n  const [language, setLanguage] = useState('english');\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim()) return;\r\n    const userMessage = { sender: 'user', text: message };\r\n    setConversation((prev) => [...prev, userMessage]);\r\n    setMessage('');\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/chat',\r\n        { message, language },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const botResponse = { sender: 'bot', text: res.data.response };\r\n      setConversation((prev) => [...prev, botResponse]);\r\n    } catch (error) {\r\n      const errorResponse = { sender: 'bot', text: 'Error processing your request.' };\r\n      setConversation((prev) => [...prev, errorResponse]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ maxWidth: 600, margin: 'auto', padding: 20, display: 'flex', flexDirection: 'column', height: '90vh' }}>\r\n        <h2>User Dashboard - Chat Diagnosis</h2>\r\n        <div style={{ marginBottom: 10 }}>\r\n          <label htmlFor=\"language-select\">Select Language: </label>\r\n          <select\r\n            id=\"language-select\"\r\n            value={language}\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n          >\r\n            <option value=\"english\">English</option>\r\n            <option value=\"indonesian\">Indonesian</option>\r\n          </select>\r\n        </div>\r\n        <div style={{ flexGrow: 1, border: '1px solid #ccc', overflowY: 'auto', padding: 10, marginBottom: 10, display: 'flex', flexDirection: 'column' }}>\r\n          {conversation.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                margin: '10px 0',\r\n                maxWidth: '80%',\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  padding: '8px 12px',\r\n                  borderRadius: 20,\r\n                  backgroundColor: msg.sender === 'user' ? '#d1e7dd' : '#f8d7da',\r\n                  wordWrap: 'break-word',\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <textarea\r\n          rows=\"3\"\r\n          style={{ width: '100%', padding: 10, resize: 'none', boxSizing: 'border-box' }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your symptoms here...\"\r\n        />\r\n        <button onClick={handleSend} style={{ marginTop: 10, alignSelf: 'flex-end' }}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}