{"ast":null,"code":"var _jsxFileName = \"D:\\\\sispak\\\\Sistem Pakar\\\\mern-sistempakardokter\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [rules, setRules] = useState([]);\n  const [newRule, setNewRule] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchRules();\n  }, []);\n  const fetchRules = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/knowledge-base');\n      setRules(res.data);\n    } catch (err) {\n      setMessage('Failed to fetch rules');\n    }\n  };\n  const handleAddRule = async () => {\n    if (!newRule.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/knowledge-base', {\n        rule: newRule\n      });\n      setNewRule('');\n      setMessage('Rule added successfully');\n      fetchRules();\n    } catch (err) {\n      setMessage('Failed to add rule');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: 'auto',\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard - Manage Knowledge Base\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        style: {\n          width: '100%',\n          padding: 10\n        },\n        value: newRule,\n        onChange: e => setNewRule(e.target.value),\n        placeholder: \"Enter new rule, e.g. IF symptom1 AND symptom2 THEN diagnosis='disease'\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddRule,\n        style: {\n          marginTop: 10\n        },\n        children: \"Add Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: rules.map(rule => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: rule.rule\n      }, rule._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"x7foItT2AdpC+wp1xj7uibsM6Qc=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","rules","setRules","newRule","setNewRule","message","setMessage","fetchRules","res","get","data","err","handleAddRule","trim","post","rule","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","width","value","onChange","e","target","placeholder","onClick","marginTop","map","_id","_c","$RefreshReg$"],"sources":["D:/sispak/Sistem Pakar/mern-sistempakardokter/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction AdminDashboard() {\r\n  const [rules, setRules] = useState([]);\r\n  const [newRule, setNewRule] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchRules();\r\n  }, []);\r\n\r\n  const fetchRules = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:5000/api/knowledge-base');\r\n      setRules(res.data);\r\n    } catch (err) {\r\n      setMessage('Failed to fetch rules');\r\n    }\r\n  };\r\n\r\n  const handleAddRule = async () => {\r\n    if (!newRule.trim()) return;\r\n    try {\r\n      await axios.post('http://localhost:5000/api/knowledge-base', { rule: newRule });\r\n      setNewRule('');\r\n      setMessage('Rule added successfully');\r\n      fetchRules();\r\n    } catch (err) {\r\n      setMessage('Failed to add rule');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 600, margin: 'auto', padding: 20 }}>\r\n      <h2>Admin Dashboard - Manage Knowledge Base</h2>\r\n      {message && <p>{message}</p>}\r\n      <div>\r\n        <textarea\r\n          rows=\"3\"\r\n          style={{ width: '100%', padding: 10 }}\r\n          value={newRule}\r\n          onChange={(e) => setNewRule(e.target.value)}\r\n          placeholder=\"Enter new rule, e.g. IF symptom1 AND symptom2 THEN diagnosis='disease'\"\r\n        />\r\n        <button onClick={handleAddRule} style={{ marginTop: 10 }}>\r\n          Add Rule\r\n        </button>\r\n      </div>\r\n      <h3>Existing Rules</h3>\r\n      <ul>\r\n        {rules.map((rule) => (\r\n          <li key={rule._id}>{rule.rule}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}