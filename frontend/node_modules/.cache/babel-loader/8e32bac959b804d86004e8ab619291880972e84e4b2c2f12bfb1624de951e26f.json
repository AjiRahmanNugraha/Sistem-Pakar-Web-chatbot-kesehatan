{"ast":null,"code":"var _jsxFileName = \"D:\\\\sispak\\\\Sistem Pakar\\\\mern-sistempakardokter\\\\frontend\\\\src\\\\pages\\\\UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Navbar from '../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserDashboard() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const [language, setLanguage] = useState('english');\n  const [isListening, setIsListening] = useState(false);\n  const recognitionRef = useRef(null);\n  const token = localStorage.getItem('token');\n  useEffect(() => {\n    // Initialize SpeechRecognition\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognition) {\n      recognitionRef.current = new SpeechRecognition();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = language === 'english' ? 'en-US' : 'id-ID';\n      recognitionRef.current.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setMessage(transcript);\n        setIsListening(false);\n      };\n      recognitionRef.current.onerror = event => {\n        console.error('Speech recognition error', event.error);\n        setIsListening(false);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    } else {\n      console.warn('SpeechRecognition API not supported in this browser.');\n    }\n  }, [language]);\n  useEffect(() => {\n    // Speak bot responses using speech synthesis\n    if (conversation.length > 0) {\n      const lastMessage = conversation[conversation.length - 1];\n      if (lastMessage.sender === 'bot') {\n        const utterance = new SpeechSynthesisUtterance(lastMessage.text);\n        utterance.lang = language === 'english' ? 'en-US' : 'id-ID';\n        window.speechSynthesis.speak(utterance);\n      }\n    }\n  }, [conversation, language]);\n  const handleSend = async () => {\n    if (!message.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: message\n    };\n    setConversation(prev => [...prev, userMessage]);\n    setMessage('');\n    try {\n      const res = await axios.post('http://localhost:5000/api/chat', {\n        message,\n        language\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const botResponse = {\n        sender: 'bot',\n        text: res.data.response\n      };\n      setConversation(prev => [...prev, botResponse]);\n    } catch (error) {\n      const errorResponse = {\n        sender: 'bot',\n        text: 'Error processing your request.'\n      };\n      setConversation(prev => [...prev, errorResponse]);\n    }\n  };\n  const toggleListening = () => {\n    if (isListening) {\n      recognitionRef.current && recognitionRef.current.stop();\n      setIsListening(false);\n    } else {\n      recognitionRef.current && recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: 600,\n        margin: 'auto',\n        padding: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '90vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Dashboard - Chat Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"language-select\",\n          children: \"Select Language: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"language-select\",\n          value: language,\n          onChange: e => setLanguage(e.target.value),\n          disabled: isListening,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"english\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"indonesian\",\n            children: \"Indonesian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          border: '1px solid #ccc',\n          overflowY: 'auto',\n          padding: 10,\n          marginBottom: 10,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n            margin: '10px 0',\n            maxWidth: '80%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              padding: '8px 12px',\n              borderRadius: 20,\n              backgroundColor: msg.sender === 'user' ? '#d1e7dd' : '#f8d7da',\n              wordWrap: 'break-word'\n            },\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"3\",\n        style: {\n          width: '100%',\n          padding: 10,\n          resize: 'none',\n          boxSizing: 'border-box'\n        },\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your symptoms here...\",\n        disabled: isListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          style: {\n            alignSelf: 'flex-end'\n          },\n          disabled: isListening,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleListening,\n          style: {\n            alignSelf: 'flex-end'\n          },\n          children: isListening ? 'Stop Listening' : 'Start Speaking'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UserDashboard, \"E02fjo0uetbw8GSEXp+O9WJ8CLw=\");\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","UserDashboard","_s","message","setMessage","conversation","setConversation","language","setLanguage","isListening","setIsListening","recognitionRef","token","localStorage","getItem","SpeechRecognition","window","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","transcript","results","onerror","console","error","onend","warn","length","lastMessage","sender","utterance","SpeechSynthesisUtterance","text","speechSynthesis","speak","handleSend","trim","userMessage","prev","res","post","headers","Authorization","botResponse","data","response","errorResponse","toggleListening","stop","start","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","display","flexDirection","height","marginBottom","htmlFor","id","value","onChange","e","target","disabled","flexGrow","border","overflowY","map","msg","index","alignSelf","borderRadius","backgroundColor","wordWrap","rows","width","resize","boxSizing","placeholder","justifyContent","marginTop","onClick","_c","$RefreshReg$"],"sources":["D:/sispak/Sistem Pakar/mern-sistempakardokter/frontend/src/pages/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from '../components/Navbar';\r\n\r\nfunction UserDashboard() {\r\n  const [message, setMessage] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n  const [language, setLanguage] = useState('english');\r\n  const [isListening, setIsListening] = useState(false);\r\n  const recognitionRef = useRef(null);\r\n\r\n  const token = localStorage.getItem('token');\r\n\r\n  useEffect(() => {\r\n    // Initialize SpeechRecognition\r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (SpeechRecognition) {\r\n      recognitionRef.current = new SpeechRecognition();\r\n      recognitionRef.current.continuous = false;\r\n      recognitionRef.current.interimResults = false;\r\n      recognitionRef.current.lang = language === 'english' ? 'en-US' : 'id-ID';\r\n\r\n      recognitionRef.current.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setMessage(transcript);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onerror = (event) => {\r\n        console.error('Speech recognition error', event.error);\r\n        setIsListening(false);\r\n      };\r\n\r\n      recognitionRef.current.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n    } else {\r\n      console.warn('SpeechRecognition API not supported in this browser.');\r\n    }\r\n  }, [language]);\r\n\r\n  useEffect(() => {\r\n    // Speak bot responses using speech synthesis\r\n    if (conversation.length > 0) {\r\n      const lastMessage = conversation[conversation.length - 1];\r\n      if (lastMessage.sender === 'bot') {\r\n        const utterance = new SpeechSynthesisUtterance(lastMessage.text);\r\n        utterance.lang = language === 'english' ? 'en-US' : 'id-ID';\r\n        window.speechSynthesis.speak(utterance);\r\n      }\r\n    }\r\n  }, [conversation, language]);\r\n\r\n  const handleSend = async () => {\r\n    if (!message.trim()) return;\r\n    const userMessage = { sender: 'user', text: message };\r\n    setConversation((prev) => [...prev, userMessage]);\r\n    setMessage('');\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:5000/api/chat',\r\n        { message, language },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const botResponse = { sender: 'bot', text: res.data.response };\r\n      setConversation((prev) => [...prev, botResponse]);\r\n    } catch (error) {\r\n      const errorResponse = { sender: 'bot', text: 'Error processing your request.' };\r\n      setConversation((prev) => [...prev, errorResponse]);\r\n    }\r\n  };\r\n\r\n  const toggleListening = () => {\r\n    if (isListening) {\r\n      recognitionRef.current && recognitionRef.current.stop();\r\n      setIsListening(false);\r\n    } else {\r\n      recognitionRef.current && recognitionRef.current.start();\r\n      setIsListening(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div style={{ maxWidth: 600, margin: 'auto', padding: 20, display: 'flex', flexDirection: 'column', height: '90vh' }}>\r\n        <h2>User Dashboard - Chat Diagnosis</h2>\r\n        <div style={{ marginBottom: 10 }}>\r\n          <label htmlFor=\"language-select\">Select Language: </label>\r\n          <select\r\n            id=\"language-select\"\r\n            value={language}\r\n            onChange={(e) => setLanguage(e.target.value)}\r\n            disabled={isListening}\r\n          >\r\n            <option value=\"english\">English</option>\r\n            <option value=\"indonesian\">Indonesian</option>\r\n          </select>\r\n        </div>\r\n        <div style={{ flexGrow: 1, border: '1px solid #ccc', overflowY: 'auto', padding: 10, marginBottom: 10, display: 'flex', flexDirection: 'column' }}>\r\n          {conversation.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\r\n                margin: '10px 0',\r\n                maxWidth: '80%',\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  display: 'inline-block',\r\n                  padding: '8px 12px',\r\n                  borderRadius: 20,\r\n                  backgroundColor: msg.sender === 'user' ? '#d1e7dd' : '#f8d7da',\r\n                  wordWrap: 'break-word',\r\n                }}\r\n              >\r\n                {msg.text}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <textarea\r\n          rows=\"3\"\r\n          style={{ width: '100%', padding: 10, resize: 'none', boxSizing: 'border-box' }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type your symptoms here...\"\r\n          disabled={isListening}\r\n        />\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: 10 }}>\r\n          <button onClick={handleSend} style={{ alignSelf: 'flex-end' }} disabled={isListening}>\r\n            Send\r\n          </button>\r\n          <button onClick={toggleListening} style={{ alignSelf: 'flex-end' }}>\r\n            {isListening ? 'Stop Listening' : 'Start Speaking'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,SAAS,CAAC;EACnD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMmB,cAAc,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CrB,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;IACpF,IAAIF,iBAAiB,EAAE;MACrBJ,cAAc,CAACO,OAAO,GAAG,IAAIH,iBAAiB,CAAC,CAAC;MAChDJ,cAAc,CAACO,OAAO,CAACC,UAAU,GAAG,KAAK;MACzCR,cAAc,CAACO,OAAO,CAACE,cAAc,GAAG,KAAK;MAC7CT,cAAc,CAACO,OAAO,CAACG,IAAI,GAAGd,QAAQ,KAAK,SAAS,GAAG,OAAO,GAAG,OAAO;MAExEI,cAAc,CAACO,OAAO,CAACI,QAAQ,GAAIC,KAAK,IAAK;QAC3C,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;QACjDpB,UAAU,CAACoB,UAAU,CAAC;QACtBd,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDC,cAAc,CAACO,OAAO,CAACQ,OAAO,GAAIH,KAAK,IAAK;QAC1CI,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEL,KAAK,CAACK,KAAK,CAAC;QACtDlB,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDC,cAAc,CAACO,OAAO,CAACW,KAAK,GAAG,MAAM;QACnCnB,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;IACH,CAAC,MAAM;MACLiB,OAAO,CAACG,IAAI,CAAC,sDAAsD,CAAC;IACtE;EACF,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEdd,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,YAAY,CAAC0B,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,WAAW,GAAG3B,YAAY,CAACA,YAAY,CAAC0B,MAAM,GAAG,CAAC,CAAC;MACzD,IAAIC,WAAW,CAACC,MAAM,KAAK,KAAK,EAAE;QAChC,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACH,WAAW,CAACI,IAAI,CAAC;QAChEF,SAAS,CAACb,IAAI,GAAGd,QAAQ,KAAK,SAAS,GAAG,OAAO,GAAG,OAAO;QAC3DS,MAAM,CAACqB,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;MACzC;IACF;EACF,CAAC,EAAE,CAAC7B,YAAY,EAAEE,QAAQ,CAAC,CAAC;EAE5B,MAAMgC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACpC,OAAO,CAACqC,IAAI,CAAC,CAAC,EAAE;IACrB,MAAMC,WAAW,GAAG;MAAER,MAAM,EAAE,MAAM;MAAEG,IAAI,EAAEjC;IAAQ,CAAC;IACrDG,eAAe,CAAEoC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IACjDrC,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAMuC,GAAG,GAAG,MAAMhD,KAAK,CAACiD,IAAI,CAC1B,gCAAgC,EAChC;QAAEzC,OAAO;QAAEI;MAAS,CAAC,EACrB;QAAEsC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUlC,KAAK;QAAG;MAAE,CAClD,CAAC;MACD,MAAMmC,WAAW,GAAG;QAAEd,MAAM,EAAE,KAAK;QAAEG,IAAI,EAAEO,GAAG,CAACK,IAAI,CAACC;MAAS,CAAC;MAC9D3C,eAAe,CAAEoC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEK,WAAW,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACd,MAAMsB,aAAa,GAAG;QAAEjB,MAAM,EAAE,KAAK;QAAEG,IAAI,EAAE;MAAiC,CAAC;MAC/E9B,eAAe,CAAEoC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEQ,aAAa,CAAC,CAAC;IACrD;EACF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI1C,WAAW,EAAE;MACfE,cAAc,CAACO,OAAO,IAAIP,cAAc,CAACO,OAAO,CAACkC,IAAI,CAAC,CAAC;MACvD1C,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,MAAM;MACLC,cAAc,CAACO,OAAO,IAAIP,cAAc,CAACO,OAAO,CAACmC,KAAK,CAAC,CAAC;MACxD3C,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,oBACEZ,OAAA,CAAAE,SAAA;IAAAsD,QAAA,gBACExD,OAAA,CAACF,MAAM;MAAA2D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5D,OAAA;MAAK6D,KAAK,EAAE;QAAEC,QAAQ,EAAE,GAAG;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAX,QAAA,gBACnHxD,OAAA;QAAAwD,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC5D,OAAA;QAAK6D,KAAK,EAAE;UAAEO,YAAY,EAAE;QAAG,CAAE;QAAAZ,QAAA,gBAC/BxD,OAAA;UAAOqE,OAAO,EAAC,iBAAiB;UAAAb,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC1D5D,OAAA;UACEsE,EAAE,EAAC,iBAAiB;UACpBC,KAAK,EAAE9D,QAAS;UAChB+D,QAAQ,EAAGC,CAAC,IAAK/D,WAAW,CAAC+D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC7CI,QAAQ,EAAEhE,WAAY;UAAA6C,QAAA,gBAEtBxD,OAAA;YAAQuE,KAAK,EAAC,SAAS;YAAAf,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC5D,OAAA;YAAQuE,KAAK,EAAC,YAAY;YAAAf,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN5D,OAAA;QAAK6D,KAAK,EAAE;UAAEe,QAAQ,EAAE,CAAC;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,SAAS,EAAE,MAAM;UAAEd,OAAO,EAAE,EAAE;UAAEI,YAAY,EAAE,EAAE;UAAEH,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE;QAAS,CAAE;QAAAV,QAAA,EAC/IjD,YAAY,CAACwE,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBAC3BjF,OAAA;UAEE6D,KAAK,EAAE;YACLqB,SAAS,EAAEF,GAAG,CAAC7C,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY;YAC5D4B,MAAM,EAAE,QAAQ;YAChBD,QAAQ,EAAE;UACZ,CAAE;UAAAN,QAAA,eAEFxD,OAAA;YACE6D,KAAK,EAAE;cACLI,OAAO,EAAE,cAAc;cACvBD,OAAO,EAAE,UAAU;cACnBmB,YAAY,EAAE,EAAE;cAChBC,eAAe,EAAEJ,GAAG,CAAC7C,MAAM,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;cAC9DkD,QAAQ,EAAE;YACZ,CAAE;YAAA7B,QAAA,EAEDwB,GAAG,CAAC1C;UAAI;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC,GAjBFqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5D,OAAA;QACEsF,IAAI,EAAC,GAAG;QACRzB,KAAK,EAAE;UAAE0B,KAAK,EAAE,MAAM;UAAEvB,OAAO,EAAE,EAAE;UAAEwB,MAAM,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAa,CAAE;QAC/ElB,KAAK,EAAElE,OAAQ;QACfmE,QAAQ,EAAGC,CAAC,IAAKnE,UAAU,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CmB,WAAW,EAAC,4BAA4B;QACxCf,QAAQ,EAAEhE;MAAY;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF5D,OAAA;QAAK6D,KAAK,EAAE;UAAEI,OAAO,EAAE,MAAM;UAAE0B,cAAc,EAAE,eAAe;UAAEC,SAAS,EAAE;QAAG,CAAE;QAAApC,QAAA,gBAC9ExD,OAAA;UAAQ6F,OAAO,EAAEpD,UAAW;UAACoB,KAAK,EAAE;YAAEqB,SAAS,EAAE;UAAW,CAAE;UAACP,QAAQ,EAAEhE,WAAY;UAAA6C,QAAA,EAAC;QAEtF;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5D,OAAA;UAAQ6F,OAAO,EAAExC,eAAgB;UAACQ,KAAK,EAAE;YAAEqB,SAAS,EAAE;UAAW,CAAE;UAAA1B,QAAA,EAChE7C,WAAW,GAAG,gBAAgB,GAAG;QAAgB;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACxD,EAAA,CA3IQD,aAAa;AAAA2F,EAAA,GAAb3F,aAAa;AA6ItB,eAAeA,aAAa;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}